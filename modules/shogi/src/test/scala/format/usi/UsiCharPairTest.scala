package shogi
package format
package usi

import Pos._
import Usi._

class UsiCharPairTest extends ShogiTest {

  "char pair encoding" should {

    def conv(usi: Usi)         = UsiCharPair(usi, variant.Standard).toString

    val allMoves = for {
      orig <- Pos.all
      dest <- Pos.all
    } yield Move(orig, dest, false)
    val allPairs = allMoves.map(conv(_))

    val allP = for {
      dest <- Pos.all
    } yield Move(SQ1A, dest)
    //println(allP.map(conv2(_)))

   //"regular moves" in {
   //  conv(Move(SQ1G, SQ1F)) must_== "<E"
   //  conv(Move(SQ7C, SQ7D)) must_== "ZQ"
   //  conv(Move(SQ7G, SQ7F)) must_== "6?"
   //}
    "unicity" in {
      allPairs.distinct.size must_== allMoves.size
    }
    "no void char" in {
      allPairs.count(_ contains UsiCharPair.voidChar) must_== 0
    }
  //"promotions" in {
  //  conv(Move(SQ8H, SQ2B, true)) must_== ",è"
  //  conv(Move(SQ8H, SQ2B, false)) must_== ",h"
  //}
  //"drops" in {
  //  conv(Drop(Pawn, SQ1G)) must_== "<ö"
  //  conv(Drop(Lance, SQ1A)) must_== "rù"
  //  conv(Drop(Knight, SQ1I)) must_== "*õ"
  //  conv(Drop(Silver, SQ1I)) must_== "*ø"
  //  conv(Drop(Gold, SQ1I)) must_== "*÷"
  //  conv(Drop(Bishop, SQ5E)) must_== "Jô"
  //  conv(Drop(Rook, SQ5E)) must_== "Jó"
  //}
  //"random" in {
  //  convStr("8e9i") must_== """G""""
  //  convStr("8e9i+") must_== """G¢"""
  //  convStr("5h8i") must_== """/#"""
  //  convStr("5h8i+") must_== """/£"""
  //  convStr("8h7i") must_== """,$"""
  //  convStr("8h7i+") must_== """,¤"""
  //  convStr("3a6i") must_== """p%"""
  //  convStr("3a6i+") must_== """p¥"""
  //  convStr("4a5i") must_== """o&"""
  //  convStr("4a5i+") must_== """o¦"""
  //  convStr("6c4i") must_== """['"""
  //  convStr("6c4i+") must_== """[§"""
  //  convStr("9a3i") must_== """j("""
  //  convStr("9a3i+") must_== """j¨"""
  //  convStr("5b2i") must_== """e)"""
  //  convStr("5b2i+") must_== """e©"""
  //  convStr("3h1i") must_== """1*"""
  //  convStr("3h1i+") must_== """1ª"""
  //  convStr("7h9h") must_== """-+"""
  //  convStr("7h9h+") must_== """-«"""
  //  convStr("8d8h") must_== """P,"""
  //  convStr("8d8h+") must_== """P¬"""
  //  convStr("6a7h") must_== """m-"""
  //  convStr("6a7h+") must_== """m­"""
  //  convStr("1c6h") must_== """`."""
  //  convStr("1c6h+") must_== """`®"""
  //  convStr("9g5h") must_== """4/"""
  //  convStr("9g5h+") must_== """4¯"""
  //  convStr("1f4h") must_== """E0"""
  //  convStr("1f4h+") must_== """E°"""
  //  convStr("6b3h") must_== """d1"""
  //  convStr("6b3h+") must_== """d±"""
  //  convStr("1g2h") must_== """<2"""
  //  convStr("1g2h+") must_== """<²"""
  //  convStr("9d1h") must_== """O3"""
  //  convStr("9d1h+") must_== """O³"""
  //  convStr("2e9g") must_== """M4"""
  //  convStr("2e9g+") must_== """M´"""
  //  convStr("9b8g") must_== """a5"""
  //  convStr("9b8g+") must_== """aµ"""
  //  convStr("3b7g") must_== """g6"""
  //  convStr("3b7g+") must_== """g¶"""
  //  convStr("9b6g") must_== """a7"""
  //  convStr("9b6g+") must_== """a·"""
  //  convStr("2a5g") must_== """q8"""
  //  convStr("2a5g+") must_== """q¸"""
  //  convStr("8e4g") must_== """G9"""
  //  convStr("8e4g+") must_== """G¹"""
  //  convStr("5g3g") must_== """8:"""
  //  convStr("5g3g+") must_== """8º"""
  //  convStr("5a2g") must_== """n;"""
  //  convStr("5a2g+") must_== """n»"""
  //  convStr("3b1g") must_== """g<"""
  //  convStr("3b1g+") must_== """g¼"""
  //  convStr("9i9f") must_== """"="""
  //  convStr("9i9f+") must_== """"½"""
  //  convStr("9c8f") must_== """X>"""
  //  convStr("9c8f+") must_== """X¾"""
  //  convStr("5f7f") must_== """A?"""
  //  convStr("5f7f+") must_== """A¿"""
  //  convStr("6c6f") must_== """[@"""
  //  convStr("6c6f+") must_== """[À"""
  //  convStr("8e5f") must_== """GA"""
  //  convStr("8e5f+") must_== """GÁ"""
  //  convStr("2i4f") must_== """)B"""
  //  convStr("2i4f+") must_== """)Â"""
  //  convStr("5b3f") must_== """eC"""
  //  convStr("5b3f+") must_== """eÃ"""
  //  convStr("8g2f") must_== """5D"""
  //  convStr("8g2f+") must_== """5Ä"""
  //  convStr("6c1f") must_== """[E"""
  //  convStr("6c1f+") must_== """[Å"""
  //  convStr("8e9e") must_== """GF"""
  //  convStr("8e9e+") must_== """GÆ"""
  //  convStr("5i8e") must_== """&G"""
  //  convStr("5i8e+") must_== """&Ç"""
  //  convStr("6g7e") must_== """7H"""
  //  convStr("6g7e+") must_== """7È"""
  //  convStr("3a6e") must_== """pI"""
  //  convStr("3a6e+") must_== """pÉ"""
  //  convStr("9g5e") must_== """4J"""
  //  convStr("9g5e+") must_== """4Ê"""
  //  convStr("7f4e") must_== """?K"""
  //  convStr("7f4e+") must_== """?Ë"""
  //  convStr("7e3e") must_== """HL"""
  //  convStr("7e3e+") must_== """HÌ"""
  //  convStr("2b2e") must_== """hM"""
  //  convStr("2b2e+") must_== """hÍ"""
  //  convStr("3e1e") must_== """LN"""
  //  convStr("3e1e+") must_== """LÎ"""
  //  convStr("7b9d") must_== """cO"""
  //  convStr("7b9d+") must_== """cÏ"""
  //  convStr("1b8d") must_== """iP"""
  //  convStr("1b8d+") must_== """iÐ"""
  //  convStr("6c7d") must_== """[Q"""
  //  convStr("6c7d+") must_== """[Ñ"""
  //  convStr("8i6d") must_== """#R"""
  //  convStr("8i6d+") must_== """#Ò"""
  //  convStr("7d5d") must_== """QS"""
  //  convStr("7d5d+") must_== """QÓ"""
  //  convStr("9a4d") must_== """jT"""
  //  convStr("9a4d+") must_== """jÔ"""
  //  convStr("4g3d") must_== """9U"""
  //  convStr("4g3d+") must_== """9Õ"""
  //  convStr("5g2d") must_== """8V"""
  //  convStr("5g2d+") must_== """8Ö"""
  //  convStr("2f1d") must_== """DW"""
  //  convStr("2f1d+") must_== """D×"""
  //  convStr("6i9c") must_== """%X"""
  //  convStr("6i9c+") must_== """%Ø"""
  //  convStr("6g8c") must_== """7Y"""
  //  convStr("6g8c+") must_== """7Ù"""
  //  convStr("6e7c") must_== """IZ"""
  //  convStr("6e7c+") must_== """IÚ"""
  //  convStr("2f6c") must_== """D["""
  //  convStr("2f6c+") must_== """DÛ"""
  //  convStr("5f5c") must_== """A\"""
  //  convStr("5f5c+") must_== """AÜ"""
  //  convStr("6e4c") must_== """I]"""
  //  convStr("6e4c+") must_== """IÝ"""
  //  convStr("2e3c") must_== """M^"""
  //  convStr("2e3c+") must_== """MÞ"""
  //  convStr("4c2c") must_== """]_"""
  //  convStr("4c2c+") must_== """]ß"""
  //  convStr("9f1c") must_== """=`"""
  //  convStr("9f1c+") must_== """=à"""
  //  convStr("2i9b ") must_== """)a"""
  //  convStr("2i9b+") must_== """)á"""
  //  convStr("3h8b") must_== """1b"""
  //  convStr("3h8b+") must_== """1â"""
  //  convStr("3i7b") must_== """(c"""
  //  convStr("3i7b+") must_== """(ã"""
  //  convStr("7g6b") must_== """6d"""
  //  convStr("7g6b+") must_== """6ä"""
  //  convStr("5d5b") must_== """Se"""
  //  convStr("5d5b+") must_== """Så"""
  //  convStr("5i4b") must_== """&f"""
  //  convStr("5i4b+") must_== """&æ"""
  //  convStr("5d3b") must_== """Sg"""
  //  convStr("5d3b+") must_== """Sç"""
  //  convStr("7g2b") must_== """6h"""
  //  convStr("7g2b+") must_== """6è"""
  //  convStr("7h1b") must_== """-i"""
  //  convStr("7h1b+") must_== """-é"""
  //  convStr("5h9a") must_== """/j"""
  //  convStr("5h9a+") must_== """/ê"""
  //  convStr("6d8a") must_== """Rk"""
  //  convStr("6d8a+") must_== """Rë"""
  //  convStr("5b7a") must_== """el"""
  //  convStr("5b7a+") must_== """eì"""
  //  convStr("5i6a") must_== """&m"""
  //  convStr("5i6a+") must_== """&í"""
  //  convStr("7c5a") must_== """Zn"""
  //  convStr("7c5a+") must_== """Zî"""
  //  convStr("5e4a") must_== """Jo"""
  //  convStr("5e4a+") must_== """Jï"""
  //  convStr("9a3a") must_== """jp"""
  //  convStr("9a3a+") must_== """jð"""
  //  convStr("7i2a") must_== """$q"""
  //  convStr("7i2a+") must_== """$ñ"""
  //  convStr("4f1a") must_== """Br"""
  //}
  //
  }
}

@use 'pkg:breakpoint-sass' as breakpoint;
@use 'pkg:common/abstract/mixins';
@use 'pkg:common/abstract/uniboard';
@use 'pkg:common/abstract/variables';
@use 'pkg:common/theme';

.board-editor .spare {
  @include breakpoint.breakpoint(uniboard.$mq-col1-uniboard) {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: calc(100% / 9 / 11 * 12 * 2);

    .outer {
      position: absolute;
      width: 100%;
      height: 50%;

      &:last-child {
        top: 50%;
      }

      .inner {
        display: flex;
        flex-direction: row-reverse;
        height: 100%;

        .selectable-wrap {
          position: relative;
          height: 100%;
          width: calc(100% / 9);
        }
      }
    }

    &-bottom {
      .outer .inner .selectable-wrap {
        &:first-child {
          order: 1;
        }
      }
    }

    &-top {
      .outer .inner {
        justify-content: flex-end;
      }
    }
  }

  @include breakpoint.breakpoint(uniboard.$mq-col2-uniboard) {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    padding: 0 0.5rem;

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 2px;
      height: 100%;

      @include mixins.transition;

      background-color: theme.$c-border;
    }

    .outer {
      width: 50%;
      height: 0;
      padding-bottom: calc(100% / 2 * 9 / 11 * 12);
      position: relative;

      .inner {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        position: absolute;
        width: 100%;
        height: 100%;

        .selectable-wrap {
          height: calc(100% / 9);
          position: relative;

          &:has(piece) {
            cursor: pointer;
          }
        }
      }
    }

    &-top {
      grid-area: spare-top;
      flex-direction: row-reverse;

      .outer .inner {
        flex-direction: column-reverse;
      }

      &::after {
        left: unset;
        right: 0;
      }
    }

    &-bottom {
      grid-area: spare-bottom;

      .outer {
        align-self: flex-end;
      }
    }
  }

  .outer .inner .selectable-wrap {
    div {
      width: 100%;
      height: 100%;
      background-position: center;
      background-repeat: no-repeat;
      background-size: 90%;
      filter: grayscale(1);
      cursor: pointer;

      &.pointer svg {
        fill: theme.$c-good;
      }

      &.trash svg {
        fill: theme.$c-bad;
      }
    }

    &.selected-square {
      background-color: theme.$c-accent;
      border-radius: variables.$box-radius-size;

      &:has(div) {
        background-color: unset;

        div {
          filter: grayscale(0);
        }
      }
    }

    piece {
      cursor: pointer;
      width: 200%;
      height: 200%;
      margin: calc(-50% / 11 * 12) -50%;
    }
  }
}

// .board-editor .hand-spare {
//   display: none;
//   @include breakpoint($mq-col3-uniboard) {
//     display: flex;
//     flex-direction: column;
//     height: calc(100% / 9 * 7);
//     justify-content: space-around;
//     &-bottom {
//       grid-area: hs-bottom;
//       align-self: end;
//     }
//     &-top {
//       grid-area: hs-top;
//     }
//     & > div {
//       height: calc(100% / 7 / 12 * 10);
//       display: flex;
//       flex-direction: column;
//       .plus,
//       .minus {
//         flex: 1;
//         position: relative;
//         display: flex;
//         justify-content: center;
//         align-items: center;
//         opacity: 0.3;
//         &:hover {
//           opacity: 1;
//         }
//       }
//       .plus:hover {
//         background: $c-good;
//       }
//       .minus:hover {
//         background: $c-bad;
//       }
//     }
//   }
// }

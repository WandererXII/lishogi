@use 'pkg:breakpoint-sass' as breakpoint;
@use 'pkg:common/abstract/extends';
@use 'pkg:common/abstract/media-queries';
@use 'pkg:common/abstract/mixins';
@use 'pkg:common/theme';
@use 'local';

.puzzle__tools {
  @extend %box-neat-force, %flex-column;

  background: theme.$c-bg-box;

  .ceval-wrap {
    flex: 0 0 40px;
  }

  .ceval {
    height: 40px;
  }
}

.puzzle__moves {
  flex: 2 1 0;
  overflow: auto;
  border: theme.$border;
  border-width: 1px 0;
  position: relative;

  /* required by line::before */

  .tview2 > move {
    justify-content: space-between;
    border-left: 3px solid theme.$c-primary;

    &.good,
    &.win {
      border-left-color: theme.$c-good;

      &.active {
        background: theme.$m-bg-box_good_mix_80;
      }

      &:hover {
        background: theme.$c-good;
        color: theme.$c-good-over;

        move-notation::before {
          background-color: theme.$c-good;
          color: theme.$c-good-over;
        }
      }
    }

    &.fail {
      border-left-color: theme.$c-bad;
      cursor: default;

      &.active {
        background: theme.$m-bad_bg-box_mix_10;
      }

      &:hover {
        background: theme.$c-bad;
        color: theme.$c-bad-over;

        move-notation::before {
          background-color: theme.$c-bad;
          color: theme.$c-bad-over;
        }
      }
    }
  }

  interrupt lines {
    &:has(move.fail) {
      border-color: theme.$c-bad;

      line {
        &::before {
          border-color: theme.$c-bad;
        }

        move {
          cursor: default;

          &.active {
            background: theme.$m-bad_bg-box_mix_30;
            outline-color: theme.$m-bad_bg-box_mix_50;
          }

          &:hover {
            &,
            index,
            move-notation::before {
              background-color: theme.$c-bad;
              color: theme.$c-bad-over;
            }
          }
        }
      }
    }
  }
}

.puzzle__feedback {
  @extend %flex-column, %box-radius-bottom;

  flex: 1 0 8rem;
  background: theme.$c-bg-high;
  justify-content: center;

  @include breakpoint.breakpoint(local.$mq-col2) {
    @include breakpoint.breakpoint(media-queries.$mq-tall) {
      flex: 1 0 10rem;
    }
  }

  &:not(.after) {
    padding: 2em;
  }

  .player {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  &.good,
  &.win {
    border-bottom: 3px solid theme.$c-good;
  }

  &.fail {
    border-bottom: 3px solid theme.$c-bad;
  }

  .instruction {
    & > * {
      display: block;
    }

    strong {
      font-size: 1.75em;
    }

    em {
      text-align: center;
    }
  }

  .view_solution {
    margin-top: 1.5em;
    text-align: center;
    visibility: hidden;
    opacity: 0;
  }

  .view_solution.show {
    visibility: visible;
    opacity: 0.8;

    @include mixins.transition(opacity, 1.5s);
  }
}

.puzzle__controls {
  @extend %flex-center;

  .jumps {
    flex: 1 1 auto;
  }

  .fbt {
    @extend %page-text;
  }

  .glowing {
    color: theme.$c-font-clearer;
  }
}

#main-wrap {
  --main-max-width: calc(100vh - #{$site-header-outer-height} - #{$col1-uniboard-controls});

  @include breakpoint($mq-col2) {
    --main-max-width: auto;
  }
}

$hand-col1-height: auto;

.hand {
  &-top {
    grid-area: hand-top;
  }
  &-bottom {
    grid-area: hand-bot;
  }
}

.puzzle {
  grid-area: main;
  display: grid;

  &__side {
    @extend %zen;
    grid-area: side;
  }

  &__board {
    grid-area: board;
  }

  &__tools {
    grid-area: tools;
  }

  &__controls {
    @extend %zen;
    grid-area: controls;
  }

  &__session {
    @extend %zen;
    grid-area: session;
    align-self: start;
  }

  .eval-gauge {
    grid-area: gauge;
  }

  grid-template-areas:
    'hand-top'
    'board'
    'hand-bot'
    'controls'
    'tools'
    'session'
    'side';

  &__moves {
    display: none;
  }

  @include breakpoint($mq-col2) {
    grid-template-columns: $col2-uniboard-width $gauge-gap $col2-uniboard-table;
    grid-template-rows: min-content 1fr min-content auto 1fr;
    grid-template-areas:
      'board   gauge hand-top'
      'board   gauge tools'
      'board   gauge hand-bot'
      'session .     controls'
      'side    side  side';

    .board-layout-1 & {
      grid-template-rows: fit-content(0);
      grid-template-columns: $square-9 $hand-gap $col2-uniboard-width $hand-gap $square-9 $gauge-gap $col3-uniboard-table-no-hands;
      grid-template-areas:
        'hand-top . board   . hand-bot gauge tools'
        '.        . session . .        .     controls'
        '.        . side    side side   side  side';
      @include breakpoint($mq-col2-uniboard-squeeze-1) {
        grid-template-columns: $square-9-squeeze $hand-gap $board-squeeze $hand-gap $square-9-squeeze $gauge-gap $col3-uniboard-table-no-hands-squeeze;
      }
    }

    &__moves {
      display: block;
    }
  }

  @include breakpoint($mq-col3) {
    grid-template-areas:
      'side    . board   gauge hand-top'
      'side    . board   gauge tools'
      'side    . board   gauge hand-bot'
      'side    . session .     controls'
      'side    . .       .     .';
    grid-template-columns:
      $col3-uniboard-side $block-gap $col3-uniboard-width $gauge-gap
      $col3-uniboard-table;

    .board-layout-1 & {
      grid-template-rows: fit-content(0);
      grid-template-columns:
        $col3-uniboard-side $block-gap $square-9 $hand-gap $col3-uniboard-width $hand-gap $square-9 $gauge-gap
        $col3-uniboard-table-no-hands;
      grid-template-areas:
        'side . hand-top  . board   . hand-bot gauge tools'
        'side . .         . session . .        .     controls'
        'side . .         . .       . .        .     .';
    }
  }

  &__side {
    display: grid;
    grid-gap: $block-gap;
    grid-template-areas: 'user' 'theme' 'metas' 'config';

    .puzzle-replay & {
      grid-template-areas: 'replay' 'user' 'metas' 'config';
    }

    @include breakpoint($mq-xx-small) {
      grid-template-columns: 1fr 1fr;
      grid-template-areas: 'metas user' 'metas theme' 'config theme' '. theme';
      grid-template-rows: min-content min-content min-content min-content;

      .puzzle-replay & {
        grid-template-areas: 'metas replay' 'metas user' 'config user';
      }
    }

    @include breakpoint($mq-x-large) {
      grid-template-columns: $col3-uniboard-side;
      grid-template-areas: 'metas' 'user' 'theme' 'config';
      grid-template-rows: min-content min-content min-content;
      justify-self: end;

      .puzzle-replay & {
        grid-template-areas: 'metas' 'replay' 'user' 'config';
      }
    }

    &__metas {
      grid-area: metas;
    }

    &__user {
      grid-area: user;
    }

    &__config {
      grid-area: config;
    }

    &__theme {
      grid-area: theme;
    }

    &__replay {
      grid-area: replay;
    }
  }
}

@include breakpoint($mq-col1-uniboard) {
  .hand {
    &-top {
      margin-bottom: #{$block-gap};
    }
    &-bottom {
      margin-top: #{$block-gap};
    }
  }
}

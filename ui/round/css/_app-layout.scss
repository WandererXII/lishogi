.rcontrols {
  grid-area: controls;
}
.expiration-top {
  grid-area: expi-top;
}
.expiration-bottom {
  grid-area: expi-bot;
}
.ruser-top {
  grid-area: user-top;
}
.ruser-bottom {
  grid-area: user-bot;
}
.rclock-top {
  grid-area: clock-top;
}
.rclock-bottom {
  grid-area: clock-bot;
}
.rmoves {
  grid-area: moves;
}
.keyboard-move {
  grid-area: kb-move;
}

.round__app {
  display: grid;

  @include breakpoint($mq-col1) {
    grid-template-rows:
      auto
      $col1-player-clock-height
      auto
      auto
      auto;

    grid-template-areas:
      'moves'
      'user-top'
      'board'
      'expi-bot'
      'user-bot'
      'kb-move'
      'controls';

    // Put clocks and players in the same grid cell.
    // This allows having a single cell column, instead of
    // columns: auto min-content;
    // This is required to display the overflowable horizontal move list,
    // so that it can be contain within the grid parent.
    .rclock-top {
      grid-area: 2 / 1 / 2 / 2;
    }
    .rclock-bottom {
      grid-area: 5 / 1 / 5 / 2;
    }

    sg-board {
      box-shadow: none;
    }
    .expiration-top {
      display: none;
    }
    &__table {
      display: none;
    }
    .keyboard-move {
      margin-left: $block-gap;
    }

    &.move-confirm {
      // replace move list with move confirmation
      grid-template-areas:
        'controls'
        'user-top'
        'board'
        'expi-bot'
        'user-bot'
        'kb-move';
      .rmoves {
        display: none;
      }
    }
  }

  @include breakpoint($mq-col2) {
    grid-template-rows: auto auto auto minmax(0, 1fr);
    grid-template-columns: $col2-uniboard-main $gauge-gap $col3-uniboard-table;
    grid-template-areas:
      'board    . clock-top'
      'board    . expi-top'
      'board    . user-top'
      'board    . moves'
      'board    . controls'
      'board    . user-bot'
      'board    . expi-bot'
      'board    . clock-bot'
      'kb-move  . .';
    .round__app__table {
      grid-area: 2 / 3 / 8 / 4;
    }
    .expiration-top {
      display: flex;
    }
    .rmoves {
      margin-bottom: 1px;
      .moves {
        display: none;
        background: none;
      }
      &.impasse {
        display: flex;
      }
    }
    .keyboard-move {
      margin: $block-gap 0 0 0;
    }
    .rcontrols {
      align-self: flex-end;
      .ricons {
        &.empty {
          display: none;
        }
        &.confirm > button {
          visibility: visible;
          opacity: 0.5;
          pointer-events: none;
        }
      }
    }
    @include breakpoint($mq-col2-uniboard-squeeze-1) {
      grid-template-columns: $board-squeeze $gauge-gap $table-squeeze;
    }

    .compact-layout & {
      grid-template-rows: fit-content(0) fit-content(0) 1fr fit-content(0);
      grid-template-columns: $col3-uniboard-main $gauge-gap $col3-uniboard-table;
      grid-template-areas:
        'user-top . expi-top'
        'board    . moves'
        'board    . moves'
        'board    . controls'
        'user-bot . expi-bot'
        'kb-move  . .';
      margin-top: -25px;
      grid-column-gap: 0;
      .rclock-turn {
        height: unset;
        line-height: unset;
      }
      .rclock-top,
      .empty__clock-top {
        grid-area: 1 / 1 / 2 / 2;
      }
      .rclock-bottom,
      .empty__clock-bottom {
        grid-area: 5 / 1 / 6 / 2;
      }
      .round__app__table {
        grid-area: 2 / 3 / 5 / 4;
      }
      .rclock {
        /* that weird shit is required so the clock goes above the player since they share the same grid cell */
        justify-self: flex-end;
        z-index: 1;
        background-color: $c-bg-high;
        .moretime,
        .berserked,
        .go-berserk {
          &::before {
            font-size: 18px;
          }
        }
        .go-berserk,
        .tour-rank {
          font-size: 18px;
          line-height: unset;
        }
      }
      .rclock .tour-rank,
      .rclock .moretime,
      .rclock .berserked {
        order: -1;
      }
      .rclock .bar {
        display: none;
      }
      .rclock {
        .time,
        .byoyomi {
          font-size: 16px !important;
          line-height: 22px;
          &.per0 {
            padding: 0;
          }
        }
        .time {
          padding: 3px 1vmin 0 1vmin;
          box-shadow: none;
        }
        .byoyomi {
          padding-left: 0;
        }
      }
      .ruser {
        height: 25px;
        padding: 0.1em 0.3em 0 0.3em;
        line-height: 22px;
        background-color: $c-bg-high;
        z-index: 1;
      }
      .ruser a {
        flex: none;
      }
      .expiration {
        height: 25px;
      }
      @include breakpoint($mq-col2-uniboard-squeeze-1) {
        grid-template-columns: $board-squeeze $gauge-gap $table-squeeze;
      }
    }

    @include breakpoint($mq-short) {
      & .rmoves .moves {
        display: flex;
      }
    }
  }

  &__board {
    grid-area: board;
  }
}

@use 'pkg:breakpoint-sass' as breakpoint;
@use 'uniboard';
@use 'variables';

@mixin box-radius {
  border-radius: variables.$box-radius-size;
}

@mixin box-shadow {
  box-shadow: variables.$box-shadow;
}

@mixin box-neat {
  @include box-radius;
  @include box-shadow;
}

@mixin debug-zoom-input {
  #zoom-input {
    display: none;

    @include breakpoint.breakpoint(uniboard.$mq-zoom-enabled) {
      display: block;
      position: fixed;
      bottom: 3px;
      right: 3px;
      width: 10vw;
    }
  }
}

@mixin transition($prop: all, $dur: variables.$transition-duration) {
  transition: $prop $dur;
}

@mixin hoverflow {
  & {
    overflow-y: auto;
  }

  @media (hover: hover) {
    overflow: hidden;
    scrollbar-gutter: stable;

    &:hover {
      overflow-y: auto;
    }
  }
}

@mixin hide {
  display: none;

  .blind-mode & {
    display: inherit;
  }
}

@mixin ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin crosstable-large {
  .crosstable__users {
    flex: 7 1 auto;
  }
}

@mixin crosstable-small {
  .crosstable__users {
    flex: 1 1 auto;
  }
}

@mixin board-width($prop: width) {
  #{$prop}: calc((100% - #{uniboard.$hands-gap}) / 11 * 9);

  .main-v-minishogi &,
  .main-v-kyotoshogi & {
    #{$prop}: calc((100% - #{uniboard.$hands-gap}) / 7 * 5);
  }

  .main-v-chushogi & {
    #{$prop}: 100%;
  }
}

@mixin hand-width($prop: width) {
  #{$prop}: calc((100% - #{uniboard.$hands-gap}) / 11 + #{uniboard.$hand-gap});

  .main-v-minishogi &,
  .main-v-kyotoshogi & {
    #{$prop}: calc((100% - #{uniboard.$hands-gap}) / 7 + #{uniboard.$hand-gap});
  }

  .main-v-chushogi & {
    #{$prop}: 0;
  }
}

@mixin light-theme {
  html.light &,
  html.custom-light & {
    @content;
  }
}

@mixin has-bg-img {
  body.custom-background-img & {
    @content;
  }
}

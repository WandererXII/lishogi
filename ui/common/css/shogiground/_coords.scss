@use 'pkg:breakpoint-sass' as breakpoint;
@use '../abstract/fluid-size' as *;
@use '../abstract/uniboard';
@use '../theme/generated/theme';
@use 'coords-colors';

coords {
  user-select: none;
  color: #fff;
  font-weight: bold;

  /* handle hidden coords */
  .coords-no & {
    display: none;
  }

  /* handle inner coords */
  position: absolute;
  display: flex;
  pointer-events: none;

  @include fluid-size('font-size', 7px, 11px);

  body[data-notation='2'] &.ranks,
  .d-12x12 &.ranks {
    @include fluid-size('font-size', 6px, 10px);
  }

  &.ranks {
    flex-flow: column-reverse;
    top: 1px;
    right: 0; // a negative value creates empty space on the right side in mobile browsers
    height: 100%;
    width: 1.1em;

    &.gote {
      flex-flow: column;
    }

    z-index: 0;
  }

  &.files {
    top: 0;
    left: 0;
    text-align: left;
    flex-flow: row;
    width: 100%;
    height: 1.4em;

    &.gote {
      flex-flow: row-reverse;
    }

    coord {
      padding-left: 4px;
    }

    z-index: 0;
  }

  coord {
    flex: 1 1 auto;
  }
}

@include coords-colors.coords-colors;

/* handle outer/edge coords */
@include breakpoint.breakpoint(uniboard.$mq-col2-uniboard) {
  .coords-out coords,
  .coords-edge coords {
    text-shadow: none;
    text-align: center;

    &.ranks {
      top: 0;

      coord {
        transform: translateY(42%);
      }
    }
  }

  .coords-out coords {
    &.ranks {
      right: -12px;
      width: 12px;
    }

    &.files {
      top: -15px;
    }

    coord {
      color: theme.$c-font-page !important;
    }
  }

  .coords-edge {
    $edge-size: calc(1.7vh * var(--board-scale, 1));
    $edge-size-s: calc(1.7vh * var(--board-scale, 1) - 1px);

    .main-board {
      sg-board {
        border: $edge-size solid transparent;
        background-origin: border-box;
      }

      .sg-hand-wrap {
        height: calc((100% - #{$edge-size}) / 9 * 7);

        sg-hand {
          padding-left: calc(#{$edge-size} / 9);
          padding-right: calc(#{$edge-size} / 9);
        }

        &.hand-bottom sg-hand {
          padding-bottom: $edge-size;
        }

        &.hand-top sg-hand {
          padding-top: $edge-size;
        }
      }

      &.v-minishogi .sg-hand-wrap {
        sg-hand {
          padding: $edge-size calc(#{$edge-size} / 5);
        }
      }

      &.v-kyotoshogi .sg-hand-wrap {
        sg-hand {
          padding-left: calc(#{$edge-size} / 5);
          padding-right: calc(#{$edge-size} / 5);
        }

        height: calc((100% - #{$edge-size}) / 5 * 4);
      }
    }

    sg-promotion {
      outline: $edge-size solid #0000003f;
    }

    coords {
      font-size: $edge-size-s;

      &.ranks {
        left: 100%;
        width: $edge-size;

        coord {
          transform: translateY(42%);
        }
      }

      &.files {
        top: unset;
        bottom: 100%;

        &.gote {
          bottom: unset;
          top: 100%;
        }

        height: $edge-size-s;
        line-height: $edge-size-s;
      }
    }

    body[data-notation='2'] & {
      coords.ranks {
        // full width characters
        font-size: calc(1.4vh * var(--board-scale, 1));
      }
    }

    .board-editor .spare {
      border-top: $edge-size solid transparent;
      border-bottom: $edge-size solid transparent;

      &-bottom {
        border-right: calc(#{$edge-size} / 9 * 4) solid transparent;
      }

      &-top {
        border-left: calc(#{$edge-size} / 9 * 4) solid transparent;
      }
    }
  }
}

.d-12x12 coords {
  coord {
    flex: 1 1 calc(100% / 12);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &.ranks coord {
    transform: unset;
  }
}

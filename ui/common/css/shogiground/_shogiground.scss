@use '../abstract/extends';
@use '../abstract/z-index' as z;
@use '../theme/generated/theme';
@use 'board-theme';
@use 'shapes';

sg-board {
  @extend %rel-100;

  display: block;
  background-size: cover;
  top: 0;
}

sg-squares,
sg-pieces,
sg-promotion {
  @extend %abs-100;

  top: 0;
  left: 0;
  display: block;
  line-height: 0;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
  box-sizing: border-box;
}

sg-pieces {
  .manipulable & {
    cursor: pointer;
  }
}

sg-squares {
  display: grid;
  justify-content: space-between;
  grid-template: repeat(9, 1fr) / repeat(9, 1fr);

  .d-5x5 & {
    grid-template: repeat(5, 1fr) / repeat(5, 1fr);
  }

  .d-12x12 & {
    grid-template: repeat(12, 1fr) / repeat(12, 1fr);
  }
  // to force grid to fully cover the background
  width: calc(100% + 0.04px);
  height: calc(100% + 0.04px);
  pointer-events: none;

  sq {
    &.dest {
      background: radial-gradient(theme.$c-selected 19%, rgba(0, 0, 0, 0) 20%);
    }

    &.pre-dest {
      background: radial-gradient(theme.$c-premoved 19%, rgba(0, 0, 0, 0) 20%);
    }

    &.oc.dest {
      background: radial-gradient(transparent 0%, transparent 80%, theme.$c-selected 80%);
    }

    &.oc.pre-dest {
      background: radial-gradient(transparent 0%, transparent 80%, theme.$c-premoved 80%);
    }

    &.last-dest {
      background-color: theme.$c-last-dest;

      &.oc.dest:not(.hover) {
        background: radial-gradient(
          theme.$c-last-dest 0%,
          theme.$c-last-dest 80%,
          theme.$c-selected 80%
        );
      }
    }

    &.check {
      background-color: theme.$m-red_alpha_neg50;
    }

    &.selected {
      background-color: theme.$c-selected;
    }

    &.preselected,
    &.current-pre {
      background-color: theme.$c-premoved;
    }

    &.dest.hover {
      background: theme.$c-selected-hover;
    }

    &.pre-dest.hover {
      background: theme.$c-premoved-hover;
    }

    &.force-selected:not(.selected) {
      animation: selected 1s ease-in-out infinite alternate;
    }

    &.sealed {
      background-color: theme.$c-premoved;
    }
  }
}

piece {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(200% / 9);
  height: calc(200% / 9);
  margin: calc(-50% / 11 * 12 / 9) calc(-50% / 9);

  .d-5x5 sg-board & {
    width: calc(200% / 5);
    height: calc(200% / 5);
    margin: calc(-50% / 11 * 12 / 5) calc(-50% / 5);
  }

  .d-12x12 sg-board & {
    width: calc(200% / 12);
    height: calc(200% / 12);
    margin: calc(-50% / 11) calc(-50% / 12);
  }

  transform: scale(0.5);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  pointer-events: none;
  z-index: z.get('sg__piece');

  &.anim {
    z-index: z.get('sg__piece.anim');
  }

  &.fading {
    z-index: z.get('sg__piece.fading');
    opacity: 0.5;
  }

  &.ghost {
    opacity: 0.3;
  }

  &.dragging {
    cursor: pointer;
    // pointer-events: auto; // interferes, but cursor has no effect without it
    z-index: z.get('sg__piece.dragging') !important;

    &.touch {
      top: -50px;
    }
  }
}

sg-square-over {
  position: absolute;
  box-sizing: content-box;
  top: 0;
  left: 0;
  width: calc(100% / 9);
  height: calc(100% / 9);

  .d-5x5 & {
    width: calc(100% / 5);
    height: calc(100% / 5);
  }

  .d-12x12 & {
    width: calc(100% / 12);
    height: calc(100% / 12);
  }

  background: #00000050;
  border-radius: 50%;
  padding: 6%;
  margin: -6%;
  will-change: transform;
  pointer-events: none;
  z-index: z.get('sg__overlay');
}

sg-promotion {
  z-index: z.get('sg__promotion');
  background-color: #0000003f;

  &.active {
    display: block;
    pointer-events: auto;
  }

  sg-promotion-square {
    position: absolute;
    top: 0;
    left: 0;
    width: calc(100% / 9);
    height: calc(100% / 9);

    .d-5x5 & {
      width: calc(100% / 5);
      height: calc(100% / 5);
    }

    .d-12x12 & {
      width: calc(100% / 12);
      height: calc(100% / 12);
    }

    sg-promotion-choices {
      display: flex;
      flex-direction: column;
      background-color: theme.$c-bg-high;
      box-shadow: 3px 3px 7px #000a;
      border-radius: 10px;
      cursor: pointer;
      width: 100%;
      height: 200%;

      piece {
        display: block;
        position: relative;
        transform: scale(0.5);
        width: 200% !important;
        height: 100% !important;
        margin: calc(-50%) !important;
        pointer-events: auto;
      }

      &.reversed {
        margin: calc(-100% / 11 * 12) 0;
        flex-direction: column-reverse;
      }
    }
  }
}

svg.sg-shapes,
svg.sg-custom-svgs {
  @extend %abs-100;

  overflow: visible;
  top: 0;
  left: 0;
  pointer-events: none;
}

.sg-custom-svgs {
  z-index: z.get('sg__svg.sg-custom-svgs');

  svg {
    overflow: visible;
  }
}

sg-free-pieces piece {
  z-index: z.get('sg__svg.sg-free-pieces');
  opacity: 0.7;
}

@keyframes selected {
  from {
    background-color: transparent;
  }

  to {
    background-color: theme.$c-selected;
  }
}

sg-hand-wrap {
  position: relative;

  sg-hand {
    display: flex;
    flex-wrap: wrap;
    position: absolute;
    align-items: center;
    justify-content: space-between;
    flex-direction: row-reverse;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-size: cover;

    &.promotion {
      opacity: 0.6;

      .hands-background & {
        opacity: 1;

        &::after {
          content: '';
          position: absolute;
          width: 100%;
          height: 100%;
          background-color: #0000003f;
          z-index: 2;
        }
      }
    }

    sg-hp-wrap {
      position: relative;
      flex: 1 0 14%;
      height: 100%;

      &.selected {
        opacity: 1;
        background-color: theme.$c-selected;
      }

      &.preselected {
        opacity: 1;
        background-color: theme.$c-premoved;
      }

      &.current-pre {
        background-color: theme.$c-premoved;
      }

      &[data-nb='0']:not(.drawing),
      &:not([data-nb]) {
        opacity: 0.1;

        .clear-hands & {
          opacity: 0;
        }
      }

      &::after {
        @extend %box-radius;

        content: attr(data-nb);
        position: absolute;
        bottom: 0;
        right: 1px;
        line-height: 0.85em;
        padding: 3px 0.25em;
        font-weight: bold;
        font-size: calc(1.3em * var(--board-scale));
        border: 1px solid theme.$c-font;
        background-color: theme.$c-bg-high;
        color: theme.$c-font-clearer;
        cursor: pointer;
        z-index: 2;
      }

      &[data-nb='0']:not(.selected):not(.drawing)::after,
      &:not([data-nb])::after {
        content: none;
      }

      &.drawing::before {
        content: '';
        position: absolute;
        top: 3px;
        left: 0;
        width: 12%;
        height: 12%;
        background-color: theme.$c-font-dimmer;
        border-radius: 50%;
      }

      piece {
        cursor: pointer;
        height: 200%;
        width: 200%;
        margin: calc(-50% / 11 * 12) -50%;
        transform: scale(0.5);
        pointer-events: auto;
        z-index: z.get('sg__hand-piece');
      }
    }
  }

  &.hand-top sg-hand {
    background-position: top left;

    sg-hp-wrap::after {
      bottom: unset;
      top: 0;
    }
  }

  &.hand-bottom sg-hand {
    background-position: bottom right;
  }
}
